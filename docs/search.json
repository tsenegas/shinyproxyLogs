[{"path":"https://tsenegas.github.io/shinyproxyLogs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Thibault Senegas Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thibault Senegas. Author, maintainer.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Senegas T (2025). shinyproxyLogs: Tools Analyzing 'ShinyProxy' Containers Logs. R package version 0.1.0.9000, https://tsenegas.github.io/shinyproxyLogs/.","code":"@Manual{,   title = {shinyproxyLogs: Tools for Analyzing 'ShinyProxy' Containers Logs},   author = {Thibault Senegas},   year = {2025},   note = {R package version 0.1.0.9000},   url = {https://tsenegas.github.io/shinyproxyLogs/}, }"},{"path":"https://tsenegas.github.io/shinyproxyLogs/index.html","id":"shinyproxylogs","dir":"","previous_headings":"","what":"Tools for Analyzing ShinyProxy Containers Logs","title":"Tools for Analyzing ShinyProxy Containers Logs","text":"shinyproxyLogs R package designed simplify process parsing analyzing log files generated ShinyProxy containers. package provides set functions allow users extract metadata log filenames compute summary statistics log content. helps system administrators developers quickly identify issues errors, warnings, fatal events ShinyProxy logs.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/index.html","id":"project-goal","dir":"","previous_headings":"","what":"Project Goal","title":"Tools for Analyzing ShinyProxy Containers Logs","text":"primary goal shinyproxyLogs automate streamline log analysis process ShinyProxy environments. Specifically, package: Parses Log File Names: Extracts important metadata specId, proxyId, startupTime, logType log file names. Analyzes Log Content: Reads log files computes statistics including total number lines, counts error, warning, fatal messages. Provides Summary Reports: Aggregates data container (based metadata) offer concise overview container logs.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Tools for Analyzing ShinyProxy Containers Logs","text":"Access Rights: use shinyproxyLogs, must necessary access rights shinyproxy folder. folder contains logs ShinyProxy container, without proper permissions, package able read process log files. Please ensure required read access permissions ShinyProxy logs directory using package.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Analyzing ShinyProxy Containers Logs","text":"CRAN can install development version shinyproxyLogs like :","code":"install.packages(\"shinyproxyLogs\") install.packages(\"devtools\") devtools::install_github(\"tsenegas/shinyproxyLogs\")"},{"path":"https://tsenegas.github.io/shinyproxyLogs/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Analyzing ShinyProxy Containers Logs","text":"basic example shows solve common problem:","code":"library(shinyproxyLogs) ## basic example code analyze_logs(path_container_logs = '../../shinyproxy/shinyproxy/container-logs/logs/') #> $file_info #> # A tibble: 30 × 10 #>    specId     proxyId        startupTime logType filePath numLines numErrorLines #>    <chr>      <chr>          <chr>       <chr>   <chr>       <int>         <int> #>  1 01_hello   07b3eece-65d8… 05_Feb_202… stderr  ../../s…        3             0 #>  2 01_hello   07b3eece-65d8… 05_Feb_202… stdout  ../../s…       20             0 #>  3 01_hello   34da9fa1-5e3b… 13_Feb_202… stderr  ../../s…        3             0 #>  4 01_hello   34da9fa1-5e3b… 13_Feb_202… stdout  ../../s…       20             0 #>  5 01_hello   9128a3d1-e722… 09_Feb_202… stderr  ../../s…        3             0 #>  6 01_hello   9128a3d1-e722… 09_Feb_202… stdout  ../../s…       20             0 #>  7 01_hello   d1ea989c-4bde… 09_Feb_202… stderr  ../../s…        3             0 #>  8 01_hello   d1ea989c-4bde… 09_Feb_202… stdout  ../../s…       20             0 #>  9 06_tabsets 30c5e8cf-9c16… 13_Feb_202… stderr  ../../s…        3             0 #> 10 06_tabsets 30c5e8cf-9c16… 13_Feb_202… stdout  ../../s…       20             0 #> # ℹ 20 more rows #> # ℹ 3 more variables: numWarningLines <int>, numFatalLines <int>, #> #   numInfoLines <int> #>  #> $summary #> # A tibble: 15 × 9 #>    specId        proxyId startupTime stdout_lines stderr_lines total_error_lines #>    <chr>         <chr>   <chr>              <int>        <int>             <int> #>  1 01_hello      07b3ee… 05_Feb_202…           20            3                 0 #>  2 01_hello      34da9f… 13_Feb_202…           20            3                 0 #>  3 01_hello      9128a3… 09_Feb_202…           20            3                 0 #>  4 01_hello      d1ea98… 09_Feb_202…           20            3                 0 #>  5 06_tabsets    30c5e8… 13_Feb_202…           20            3                 0 #>  6 06_tabsets    f80074… 05_Feb_202…           20            3                 0 #>  7 crash_simula… 0801f3… 05_Feb_202…           20            4                 0 #>  8 crash_simula… 10e989… 05_Feb_202…           20            3                 0 #>  9 crash_simula… 206d99… 05_Feb_202…           20            9                 2 #> 10 crash_simula… 278b89… 13_Feb_202…           20           11                 2 #> 11 crash_simula… 2b58f9… 09_Feb_202…           20            3                 0 #> 12 crash_simula… 34e115… 05_Feb_202…           20            4                 0 #> 13 crash_simula… 43c8bf… 05_Feb_202…           20            8                 2 #> 14 crash_simula… e0399e… 05_Feb_202…           20            7                 0 #> 15 crash_simula… e65af8… 05_Feb_202…           20            3                 0 #> # ℹ 3 more variables: total_warning_lines <int>, total_fatal_lines <int>, #> #   total_info_lines <int>"},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/analyze_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze ShinyProxy Log Files in a Directory — analyze_logs","title":"Analyze ShinyProxy Log Files in a Directory — analyze_logs","text":"function scans specified directory, extracts metadata log file names, reads content, computes statistics (total number lines number lines containing \"error\" \"exception\"). Additionally, retrieves ShinyProxy user information separate directory logs.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/analyze_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze ShinyProxy Log Files in a Directory — analyze_logs","text":"","code":"analyze_logs(path_container_logs, path_shinylogs = NULL)"},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/analyze_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze ShinyProxy Log Files in a Directory — analyze_logs","text":"path_container_logs Character. path directory containing container logs files. path_shinylogs Character. path directory containing ShinyProxy identity logs.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/analyze_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze ShinyProxy Log Files in a Directory — analyze_logs","text":"list containing two data frames: file_info Detailed information file. summary Summary information grouped container (based specId, proxyId, startupTime).","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/analyze_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze ShinyProxy Log Files in a Directory — analyze_logs","text":"","code":"if (FALSE) { # \\dontrun{   result <- analyze_logs(\"path/to/containersLogs\", \"path/to/shinylogs\")   print(result$summary) } # }"},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/extract_user_proxy_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract User and Proxy Mappings — extract_user_proxy_mapping","title":"Extract User and Proxy Mappings — extract_user_proxy_mapping","text":"Internal function extract user container mappings log lines.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/extract_user_proxy_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract User and Proxy Mappings — extract_user_proxy_mapping","text":"","code":"extract_user_proxy_mapping(log_lines)"},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/extract_user_proxy_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract User and Proxy Mappings — extract_user_proxy_mapping","text":"log_lines character vector containing log file lines.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/extract_user_proxy_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract User and Proxy Mappings — extract_user_proxy_mapping","text":"tibble user, proxyId, specId.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/parse_log_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse ShinyProxy Log File Name — parse_log_filename","title":"Parse ShinyProxy Log File Name — parse_log_filename","text":"function parses name log file generated ShinyProxy extracts metadata: specId, proxyId, startupTime, logType.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/parse_log_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse ShinyProxy Log File Name — parse_log_filename","text":"","code":"parse_log_filename(filename)"},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/parse_log_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse ShinyProxy Log File Name — parse_log_filename","text":"filename Character. full path log file.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/parse_log_filename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse ShinyProxy Log File Name — parse_log_filename","text":"data frame columns specId, proxyId, startupTime, logType.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/parse_log_filename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse ShinyProxy Log File Name — parse_log_filename","text":"","code":"if (FALSE) { # \\dontrun{   parse_log_filename(   \"path/to/containersLogs/log_file_(stdout|stderr).log\"   ) } # }"},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/read_log_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Log File — read_log_file","title":"Read a Log File — read_log_file","text":"Internal function read log file, supporting plain text gzipped formats.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/read_log_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Log File — read_log_file","text":"","code":"read_log_file(file)"},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/read_log_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Log File — read_log_file","text":"file Character. file path read.","code":""},{"path":"https://tsenegas.github.io/shinyproxyLogs/reference/read_log_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Log File — read_log_file","text":"character vector log lines.","code":""}]
